version: "2.0"
services:
  postgis:
    image: mdillon/postgis:11-alpine
    restart: always
    networks:
      - docdepot
    environment:
      - "POSTGRES_PASSWORD=password"
      - "POSTGRES_USER=ruc-offroad"

  postgres:
    restart: always
    image: postgres:9
    networks:
      - docdepot
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_PASSWORD=password"
      - "POSTGRES_USER=ruc-offroad"
      - "POSTGRES_DB=ruc-offroad"

  dockerize:
    image: jwilder/dockerize
    links:
      - postgres
      - postgis
    command: sh -c "while :; do sleep 8s; done"
    networks:
      - docdepot

  ruc-offroad:
    depends_on:
    - nginx
    - postgis
    - postgres
    environment:
    - JAVA_OPTS=-Dspring.profiles.active=dev -Xdebug -Xrunjdwp:transport=dt_socket,address=5005,server=y,suspend=n
    - 'CATALINA_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9000
      -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false'
    - AWS_DYNAMODB_TABLE_PROPERTY=devConfigurationDynamoTableProperties
    - AWS_REGION=ap-southeast-2
    image: 212136148154.dkr.ecr.ap-southeast-2.amazonaws.com/ruc-offroad
    restart: always
    tty: true
    ports:
      - 8080:8080
    networks:
      docdepot:
        ipv4_address: 172.19.1.112
    labels:
      docdepot: "true"
      docdepot.hostnames: ruc-offroad.dev.erdmg.com
      docdepot.tomcat: "true"
    volumes:
    - $HOME/.m2/repository/nz/co/eroad/ruc-offroad/0-SNAPSHOT/ruc-offroad-0-SNAPSHOT-exec.jar:/spring-boot/rucoffroad.jar
    - $HOME/.aws/credentials:/root/.aws/credentials:ro
    - $HOME/.docdepot/tmp:/usr/local/tomcat/tmp/

  memcached:
    image: memcached
    labels:
      docdepot: "true"
    networks:
      docdepot:
        ipv4_address: 172.19.1.100

  nginx:
    command: [bash, -c, "echo 'proxy_buffers 4 256k; proxy_buffer_size 128k;server
        { listen 80; server_name ruc-offroad.dev.erdmg.com; location / { proxy_pass
        http://172.19.1.111:8080; } } \nserver { listen 80; server_name depot.local.eroad.io;
        location / { proxy_pass http://172.19.1.101:8080; } } \n' > /etc/nginx/conf.d/default.conf
        && nginx -g 'daemon off;'"]
    image: nginx
    labels:
      docdepot: "true"
    networks:
      docdepot:
        aliases:
        - ruc-offroad.dev.erdmg.com
        - depot.local.eroad.io
        ipv4_address: 172.19.1.2

  portal:
    depends_on:
    - memcached
    - nginx
    environment:
    - JAVA_OPTS=-DMEMCACHED_NODE_01=memcached:11211 -DMEMCACHED_NODE_02=memcached:11211
      -Xdebug -Xrunjdwp:transport=dt_socket,address=5005,server=y,suspend=n
    - 'CATALINA_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9000
      -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false'
    - AWS_DYNAMODB_TABLE_PROPERTY=devConfigurationDynamoTableProperties
    - AWS_REGION=ap-southeast-2
    image: 212136148154.dkr.ecr.ap-southeast-2.amazonaws.com/portal
    labels:
      docdepot: "true"
      docdepot.hostnames: depot.local.eroad.io
      docdepot.tomcat: "true"
    networks:
      docdepot:
        ipv4_address: 172.19.1.101
    volumes:
    - $HOME/.m2/repository/nz/co/eroad/Portal/0-SNAPSHOT/Portal-0-SNAPSHOT.war:/usr/local/tomcat/webapps/Portal.war
    - $HOME/.aws/credentials:/root/.aws/credentials:ro
    - $HOME/.docdepot/tmp:/usr/local/tomcat/tmp/

volumes: {}

networks:
  docdepot:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.19.1.0/24

